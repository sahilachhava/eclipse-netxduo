{
  "expand": "schema,names",
  "startAt": 0,
  "maxResults": 28,
  "total": 28,
  "issues": [
    {
      "id": "20001",
      "key": "REQ-C001",
      "fields": {
        "summary": "ThreadX RTOS Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must depend on ThreadX real-time kernel and use ThreadX APIs for threading, synchronization, and memory management. Core requirement for all NetX functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20002",
      "key": "REQ-C002",
      "fields": {
        "summary": "Packet Pool Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must implement NX_PACKET_POOL with configurable packet sizes and counts for network buffer management. Essential for network packet allocation and deallocation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20003",
      "key": "REQ-C003",
      "fields": {
        "summary": "Dual IPv4/IPv6 Stack Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must support both IPv4 and IPv6 protocol stacks with unified API through NX_IP structure. Enables dual-stack networking with single interface.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20004",
      "key": "REQ-C004",
      "fields": {
        "summary": "TCP Socket State Machine",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide complete TCP state machine (CLOSED, LISTEN, SYN_SENT, ESTABLISHED, etc.) with window scaling and keepalive support. Critical for reliable TCP connections.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20005",
      "key": "REQ-C005",
      "fields": {
        "summary": "UDP Socket Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must implement lightweight UDP socket support with port binding and receive queue management. Required for connectionless communication protocols.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20006",
      "key": "REQ-C006",
      "fields": {
        "summary": "ARP Protocol Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement Address Resolution Protocol for IPv4 with ARP cache management and probe functionality. Essential for Ethernet-based IPv4 networking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20007",
      "key": "REQ-C007",
      "fields": {
        "summary": "ICMP/ICMPv6 Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support Internet Control Message Protocol for both IPv4 and IPv6 including ping, error reporting, and neighbor discovery. Required for network diagnostics and IPv6 functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20008",
      "key": "REQ-C008",
      "fields": {
        "summary": "Network Interface Abstraction",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide NX_INTERFACE structure supporting multiple network interfaces with capability flags and driver binding. Enables multi-homed networking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20009",
      "key": "REQ-C009",
      "fields": {
        "summary": "Configurable Feature Compilation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must use conditional compilation macros (NX_*_ENABLE) to allow selective feature inclusion. Critical for memory-constrained embedded systems.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20010",
      "key": "REQ-C010",
      "fields": {
        "summary": "DHCP Client Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide DHCP client with state machine, lease management, and optional BOOTP support. Essential for automatic IP configuration.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20011",
      "key": "REQ-C011",
      "fields": {
        "summary": "MQTT Client Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must support MQTT v3.1.1 protocol with QoS levels, subscription management, and optional TLS security. Required for IoT messaging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20012",
      "key": "REQ-C012",
      "fields": {
        "summary": "DNS Client Resolution",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement DNS client for hostname resolution with IPv4/IPv6 support and caching. Essential for name-based network connections.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20013",
      "key": "REQ-C013",
      "fields": {
        "summary": "HTTP Client/Server Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide HTTP protocol implementation with chunked encoding, authentication, and optional WebSocket upgrade. Required for web-based communication.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20014",
      "key": "REQ-C014",
      "fields": {
        "summary": "TLS/DTLS Security Stack",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide NX_SECURE_TLS with multiple cipher suites, certificate validation, and session management. Critical for secure communications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20015",
      "key": "REQ-C015",
      "fields": {
        "summary": "Cryptographic Algorithm Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement crypto algorithms including AES, RSA, ECC, SHA, and MD5 for security operations. Essential for encryption and authentication.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20016",
      "key": "REQ-C016",
      "fields": {
        "summary": "IPSec Security Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support IPSec with ESP and AH protocols when NX_IPSEC_ENABLE is defined. Required for network-layer security.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20017",
      "key": "REQ-C017",
      "fields": {
        "summary": "NAT Gateway Functionality",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide Network Address Translation with port mapping and connection tracking. Required for gateway and router applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20018",
      "key": "REQ-C018",
      "fields": {
        "summary": "Multicast Group Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must support IGMP for IPv4 and MLD for IPv6 multicast group membership. Essential for group communication applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20019",
      "key": "REQ-C019",
      "fields": {
        "summary": "Link Layer Frame Processing",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must handle Ethernet, VLAN tagging, and generic link layer protocols with driver abstraction. Critical for various network media support.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20020",
      "key": "REQ-C020",
      "fields": {
        "summary": "TCP/IP Offload Engine Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must support hardware TCP/IP offload when NX_ENABLE_TCPIP_OFFLOAD is defined. Required for high-performance networking hardware.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20021",
      "key": "REQ-C021",
      "fields": {
        "summary": "Packet Fragmentation Handling",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement IP fragmentation and reassembly for both IPv4 and IPv6 protocols. Essential for handling MTU limitations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20022",
      "key": "REQ-C022",
      "fields": {
        "summary": "Network Statistics Collection",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must maintain comprehensive network statistics counters for protocols, interfaces, and error conditions. Required for network monitoring and debugging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20023",
      "key": "REQ-C023",
      "fields": {
        "summary": "Thread-Safe API Design",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide thread-safe APIs with proper locking mechanisms for multi-threaded applications. Critical for concurrent network access.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20024",
      "key": "REQ-C024",
      "fields": {
        "summary": "Port-Specific Architecture Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must abstract hardware-specific details through nx_port.h with endianness handling and timer definitions. Essential for cross-platform portability.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20025",
      "key": "REQ-C025",
      "fields": {
        "summary": "Azure IoT Hub Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide Azure IoT client with device twin, telemetry, and direct method support. Required for Azure IoT connectivity.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20026",
      "key": "REQ-C026",
      "fields": {
        "summary": "WebSocket Protocol Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must support WebSocket protocol with frame parsing and optional compression. Required for real-time web applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20027",
      "key": "REQ-C027",
      "fields": {
        "summary": "Time Synchronization Protocols",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement SNTP client for network time synchronization and optional PTP support. Essential for time-critical applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20028",
      "key": "REQ-C028",
      "fields": {
        "summary": "Network Security Event Callbacks",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide callback mechanisms for security events, connection state changes, and error notifications. Critical for application-level security monitoring.",
        "verifiableByCodeOnly": true
      }
    }
  ]
}