{
  "expand": "schema,names",
  "startAt": 0,
  "maxResults": 56,
  "total": 56,
  "issues": [
    {
      "id": "20001",
      "key": "REQ-DOC-001",
      "fields": {
        "summary": "Dual IPv4/IPv6 Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide comprehensive dual-stack IPv4 and IPv6 network protocol support for embedded applications. Enables modern network connectivity while maintaining backward compatibility.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20002",
      "key": "REQ-DOC-002",
      "fields": {
        "summary": "Real-time Performance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Network stack must be designed specifically for deeply embedded real-time applications with deterministic behavior. Critical for time-sensitive industrial and IoT applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20003",
      "key": "REQ-DOC-003",
      "fields": {
        "summary": "ThreadX Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must be fully integrated with ThreadX real-time kernel as the underlying operating system. Provides seamless RTOS integration for embedded systems.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20004",
      "key": "REQ-DOC-004",
      "fields": {
        "summary": "Resource Optimization",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must be resource limitation aware and optimized for memory-constrained embedded devices. Essential for microcontroller-based applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20005",
      "key": "REQ-DOC-005",
      "fields": {
        "summary": "CMake Build System",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must support CMake-based build system with composable components for integration into device applications. Enables flexible project integration.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20006",
      "key": "REQ-DOC-006",
      "fields": {
        "summary": "Cross-Platform Toolchain Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support multiple toolchains including Arm GNU Toolchain, IAR, STM32Cube, MCUXpresso. Required for diverse development environments.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20007",
      "key": "REQ-DOC-007",
      "fields": {
        "summary": "User Configuration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must provide nx_user.h configuration file for customizing features and addons. Allows tailored builds for specific application needs.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20008",
      "key": "REQ-DOC-008",
      "fields": {
        "summary": "Architecture Portability",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must support multiple CPU architectures through port-specific implementations in ports/ directory. Critical for hardware platform flexibility.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20009",
      "key": "REQ-DOC-009",
      "fields": {
        "summary": "Azure IoT Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must provide Azure IoT Middleware with smart client interfaces for IoTHub and Device Provisioning Service. Enables cloud connectivity for IoT applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20010",
      "key": "REQ-DOC-010",
      "fields": {
        "summary": "IoT Plug and Play Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support IoT Plug and Play data format including Telemetry, Properties, and Commands. Required for standardized IoT device integration.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20011",
      "key": "REQ-DOC-011",
      "fields": {
        "summary": "Multiple Authentication Methods",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must support both SAS Token and X.509 client certificate authentication for secure connections. Provides flexible security options.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20012",
      "key": "REQ-DOC-012",
      "fields": {
        "summary": "Protocol Addon Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support modular protocol addons including DHCP, DNS, HTTP, MQTT, FTP, POP3, PPP, SNTP. Enables comprehensive network service support.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20013",
      "key": "REQ-DOC-013",
      "fields": {
        "summary": "TLS/DTLS Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must provide NetX Secure with TLS/DTLS encryption capabilities for secure communications. Essential for protecting data in transit.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20014",
      "key": "REQ-DOC-014",
      "fields": {
        "summary": "Cryptographic Libraries",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must include comprehensive crypto libraries for encryption, hashing, and digital signatures. Required for security implementations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20015",
      "key": "REQ-DOC-015",
      "fields": {
        "summary": "Certificate Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must support X.509 certificate handling for both RSA and ECC key types. Critical for PKI-based authentication.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20016",
      "key": "REQ-DOC-016",
      "fields": {
        "summary": "Security Vulnerability Reporting",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must follow Eclipse Foundation vulnerability reporting policy for security issues. Ensures responsible security management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20017",
      "key": "REQ-DOC-017",
      "fields": {
        "summary": "Sample Applications",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must provide comprehensive sample codes demonstrating usage of various addons and protocols. Essential for developer onboarding.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20018",
      "key": "REQ-DOC-018",
      "fields": {
        "summary": "Device Update Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support Device Update for IoT Hub agent for over-the-air (OTA) updates. Critical for remote device management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20019",
      "key": "REQ-DOC-019",
      "fields": {
        "summary": "JSON Processing",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must provide JSON parsers for handling IoT data formats and configurations. Required for modern IoT communication.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20020",
      "key": "REQ-DOC-020",
      "fields": {
        "summary": "Multi-vendor SDK Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must be integrated into semiconductor SDKs from STMicroelectronics, NXP, Renesas, and Microchip. Ensures broad hardware ecosystem support.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20021",
      "key": "REQ-DOC-021",
      "fields": {
        "summary": "MIT License Compliance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All code must be licensed under MIT License for permissive open-source usage. Enables commercial and open-source adoption.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20022",
      "key": "REQ-DOC-022",
      "fields": {
        "summary": "Eclipse Foundation Governance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Project must follow Eclipse Foundation development processes and IP policies. Ensures proper open-source governance.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20023",
      "key": "REQ-DOC-023",
      "fields": {
        "summary": "Version Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must maintain clear version numbering with GA releases tagged in GitHub releases. Critical for production deployment tracking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20024",
      "key": "REQ-DOC-024",
      "fields": {
        "summary": "Safety Certification",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide vendor-neutral, safety-certified components for critical applications. Required for regulated industries.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20025",
      "key": "REQ-DOC-025",
      "fields": {
        "summary": "Time-Sensitive Networking (TSN)",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must support TSN protocols for industrial automation and deterministic networking. Critical for Industry 4.0 applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20026",
      "key": "REQ-DOC-026",
      "fields": {
        "summary": "Network Address Translation (NAT)",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide NAT functionality for network topology management. Required for complex network configurations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20027",
      "key": "REQ-DOC-027",
      "fields": {
        "summary": "Multicast Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Must support IGMP and multicast protocols for group communications. Essential for industrial and multimedia applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20028",
      "key": "REQ-DOC-028",
      "fields": {
        "summary": "HTTP Proxy Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support HTTP proxy functionality for network routing and filtering. Required for enterprise network environments.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20029",
      "key": "REQ-CODE-001",
      "fields": {
        "summary": "ThreadX RTOS Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must depend on ThreadX real-time kernel and use ThreadX APIs for threading, synchronization, and memory management. Core requirement for all NetX functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20030",
      "key": "REQ-CODE-002",
      "fields": {
        "summary": "Packet Pool Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must implement NX_PACKET_POOL with configurable packet sizes and counts for network buffer management. Essential for network packet allocation and deallocation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20031",
      "key": "REQ-CODE-003",
      "fields": {
        "summary": "Dual IPv4/IPv6 Stack Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must support both IPv4 and IPv6 protocol stacks with unified API through NX_IP structure. Enables dual-stack networking with single interface.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20032",
      "key": "REQ-CODE-004",
      "fields": {
        "summary": "TCP Socket State Machine",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide complete TCP state machine (CLOSED, LISTEN, SYN_SENT, ESTABLISHED, etc.) with window scaling and keepalive support. Critical for reliable TCP connections.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20033",
      "key": "REQ-CODE-005",
      "fields": {
        "summary": "UDP Socket Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must implement lightweight UDP socket support with port binding and receive queue management. Required for connectionless communication protocols.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20034",
      "key": "REQ-CODE-006",
      "fields": {
        "summary": "ARP Protocol Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement Address Resolution Protocol for IPv4 with ARP cache management and probe functionality. Essential for Ethernet-based IPv4 networking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20035",
      "key": "REQ-CODE-007",
      "fields": {
        "summary": "ICMP/ICMPv6 Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support Internet Control Message Protocol for both IPv4 and IPv6 including ping, error reporting, and neighbor discovery. Required for network diagnostics and IPv6 functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20036",
      "key": "REQ-CODE-008",
      "fields": {
        "summary": "Network Interface Abstraction",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide NX_INTERFACE structure supporting multiple network interfaces with capability flags and driver binding. Enables multi-homed networking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20037",
      "key": "REQ-CODE-009",
      "fields": {
        "summary": "Configurable Feature Compilation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must use conditional compilation macros (NX_*_ENABLE) to allow selective feature inclusion. Critical for memory-constrained embedded systems.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20038",
      "key": "REQ-CODE-010",
      "fields": {
        "summary": "DHCP Client Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide DHCP client with state machine, lease management, and optional BOOTP support. Essential for automatic IP configuration.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20039",
      "key": "REQ-CODE-011",
      "fields": {
        "summary": "MQTT Client Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must support MQTT v3.1.1 protocol with QoS levels, subscription management, and optional TLS security. Required for IoT messaging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20040",
      "key": "REQ-CODE-012",
      "fields": {
        "summary": "DNS Client Resolution",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement DNS client for hostname resolution with IPv4/IPv6 support and caching. Essential for name-based network connections.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20041",
      "key": "REQ-CODE-013",
      "fields": {
        "summary": "HTTP Client/Server Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide HTTP protocol implementation with chunked encoding, authentication, and optional WebSocket upgrade. Required for web-based communication.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20042",
      "key": "REQ-CODE-014",
      "fields": {
        "summary": "TLS/DTLS Security Stack",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide NX_SECURE_TLS with multiple cipher suites, certificate validation, and session management. Critical for secure communications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20043",
      "key": "REQ-CODE-015",
      "fields": {
        "summary": "Cryptographic Algorithm Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement crypto algorithms including AES, RSA, ECC, SHA, and MD5 for security operations. Essential for encryption and authentication.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20044",
      "key": "REQ-CODE-016",
      "fields": {
        "summary": "IPSec Security Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support IPSec with ESP and AH protocols when NX_IPSEC_ENABLE is defined. Required for network-layer security.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20045",
      "key": "REQ-CODE-017",
      "fields": {
        "summary": "NAT Gateway Functionality",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide Network Address Translation with port mapping and connection tracking. Required for gateway and router applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20046",
      "key": "REQ-CODE-018",
      "fields": {
        "summary": "Multicast Group Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must support IGMP for IPv4 and MLD for IPv6 multicast group membership. Essential for group communication applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20047",
      "key": "REQ-CODE-019",
      "fields": {
        "summary": "Link Layer Frame Processing",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must handle Ethernet, VLAN tagging, and generic link layer protocols with driver abstraction. Critical for various network media support.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20048",
      "key": "REQ-CODE-020",
      "fields": {
        "summary": "TCP/IP Offload Engine Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must support hardware TCP/IP offload when NX_ENABLE_TCPIP_OFFLOAD is defined. Required for high-performance networking hardware.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20049",
      "key": "REQ-CODE-021",
      "fields": {
        "summary": "Packet Fragmentation Handling",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement IP fragmentation and reassembly for both IPv4 and IPv6 protocols. Essential for handling MTU limitations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20050",
      "key": "REQ-CODE-022",
      "fields": {
        "summary": "Network Statistics Collection",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must maintain comprehensive network statistics counters for protocols, interfaces, and error conditions. Required for network monitoring and debugging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20051",
      "key": "REQ-CODE-023",
      "fields": {
        "summary": "Thread-Safe API Design",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must provide thread-safe APIs with proper locking mechanisms for multi-threaded applications. Critical for concurrent network access.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20052",
      "key": "REQ-CODE-024",
      "fields": {
        "summary": "Port-Specific Architecture Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must abstract hardware-specific details through nx_port.h with endianness handling and timer definitions. Essential for cross-platform portability.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20053",
      "key": "REQ-CODE-025",
      "fields": {
        "summary": "Azure IoT Hub Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide Azure IoT client with device twin, telemetry, and direct method support. Required for Azure IoT connectivity.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20054",
      "key": "REQ-CODE-026",
      "fields": {
        "summary": "WebSocket Protocol Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Implementation must support WebSocket protocol with frame parsing and optional compression. Required for real-time web applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20055",
      "key": "REQ-CODE-027",
      "fields": {
        "summary": "Time Synchronization Protocols",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Code must implement SNTP client for network time synchronization and optional PTP support. Essential for time-critical applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20056",
      "key": "REQ-CODE-028",
      "fields": {
        "summary": "Network Security Event Callbacks",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide callback mechanisms for security events, connection state changes, and error notifications. Critical for application-level security monitoring.",
        "verifiableByCodeOnly": true
      }
    }
  ]
}